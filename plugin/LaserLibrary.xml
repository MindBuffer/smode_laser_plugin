<?xml version="1.0" encoding="UTF-8"?>

<library plugin="true" namespace="smode" precompiledHeader="">

  <description language="us-en">Smode Laser plugin.</description>
  <include fromApi="true" file="SmodeSDK/SmodeSDK.h" public="true"/>

  <class name="NannouLaserDeviceFactory" base="DeviceFactory">
    <attribute name="deviceClass">NannouLaserDevice</attribute>
  </class>
  <class name="NannouLaserDeviceIdentifier" base="StringDeviceIdentifier"/>
  
  <class name="LaserDevice" base="ControlDevice" abstract="true"/>

  <class name="NannouLaserDevice" base="LaserDevice">
    <variable class="PositiveInteger" name="dacPointsPerSecond" default="10000">
      <attribute name ="friendlyName">"DAC Points Per Second"</attribute>
      <attribute name ="minimum">1000</attribute>
      <attribute name ="maximum">1000000</attribute>
    </variable>
    <variable class="PositiveInteger" name="latencyPoints" default="166">
      <attribute name ="minimum">10</attribute>
      <attribute name ="maximum">10000</attribute>
    </variable>
    <variable class="Percentage" name="distancePerPoint" default="0.1">
      <attribute name ="minimum">0.01</attribute>
    </variable>
    <variable class="PositiveInteger" name="blankDelayPoints" default="10">
      <attribute name ="minimum">1</attribute>
      <attribute name ="maximum">32</attribute>
    </variable>
    <variable class="PositiveAngle" name="anglePerPoint">
      <attribute name="default">"35 deg"</attribute>
    </variable>
  </class>
  
  <class name="LaserDeviceSelector" base="ControlDeviceSelector"/>

  <!-- Laser Renderer -->
  <class name="LaserPoint" generated="cpp">
    <attribute name="shaderSourceCode" stringfile="LaserPoint.sglsl"/>
  </class>
  
  <class name="LaserGeometryShader" base="GeometryShader" abstract="yes" generated="cpp">
    <attribute name="shaderSourceCode" stringfile="LaserGeometryShader.sglsl"/>

    <variable class="WeakPointer(GeometryMask)" name="mask"/>
    <variable class="Percentage" name="maskThreshold" default="0.1"/>
    <variable class="StrictlyPositiveInteger" name="weight"/>
  </class>
  
  <class name="PointsLaserGeometryShader" base="LaserGeometryShader" generated="cpp">
    <attribute name="shaderSourceCode" stringfile="PointsLaserGeometryShader.sglsl"/>
    <attribute name="inputGeometryType">"points"</attribute>
    <attribute name="outputGeometryType">"points"</attribute>
  </class>
  
  <class name="LinesLaserGeometryShader" base="LaserGeometryShader" generated="cpp">
    <attribute name="shaderSourceCode" stringfile="LinesLaserGeometryShader.sglsl"/>
    <attribute name="inputGeometryType">"lines"</attribute>
    <attribute name="outputGeometryType">"lines"</attribute>
  </class>
  
  <class name="LaserInputGeometry" base="RenderedGeometry" abstract="true"/>

  <class name="LaserGeometryType" base="Enumeration">
    <element name="points"/>
    <element name="lines"/>
  </class>
  
  <class name="LaserGeometryRenderer" base="GeometryLayerUser">
    <attribute name="friendlyName">"Laser Renderer"</attribute>
    
    <variable class="LaserDeviceSelector" name="device"/>
    <variable class="LaserGeometryType" name="geometryType"/>
    <variable class="StrictlyPositiveInteger" name="weight"/>
    <variable class="Percentage" name="maskThreshold" default="0.1"/>
    <variable class="OwnedVector(GeometryMask)" name="masks"/>
  </class>

  <class name="LaserShapeRenderer" base="ShapeRenderer">
    <variable class="LaserDeviceSelector" name="device"/>
  </class>
  
</library>